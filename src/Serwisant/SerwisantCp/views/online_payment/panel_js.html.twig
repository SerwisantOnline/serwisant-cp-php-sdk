<div class="hidden">
  <div id="code-header-sending">
    <h4 class="modal-title text-center">{{ t(_self, 'code_modal.title.sending') }}</h4>
  </div>
  <div id="code-header-confirm">
    <h4 class="modal-title text-center">{{ t(_self, 'code_modal.title.confirm') }}</h4>
  </div>
  <div id="code-body-waiting">
    <div class="code-modal-waiting">
      <div class="code-modal-loading loading">
      </div>
    </div>
  </div>
  <div id="code-header-errors">
    <h4 class="modal-title text-center">{{ t(_self, 'code_modal.title.errors') }}</h4>
  </div>
  <div id="code-header-failure">
    <h4 class="modal-title text-center">{{ t(_self, 'code_modal.title.failure') }}</h4>
  </div>
  <div id="code-body-failure">
    <div class="code-modal-failure">
      <div class="code-modal-loading">
      </div>
    </div>
  </div>
  <div id="code-header-success">
    <h4 class="modal-title text-center">{{ t(_self, 'code_modal.title.success') }}</h4>
  </div>
  <div id="code-body-success">
    <div class="code-modal-success">
      <div class="code-modal-loading">
      </div>
    </div>
  </div>

  <div id="transfer-header-sending">
    <h4 class="modal-title text-center">{{ t(_self, 'transfer_modal.title.sending') }}</h4>
  </div>
  <div id="transfer-header-errors">
    <h4 class="modal-title text-center">{{ t(_self, 'transfer_modal.title.errors') }}</h4>
  </div>
  <div id="transfer-header-redirecting">
    <h4 class="modal-title text-center">{{ t(_self, 'transfer_modal.title.redirecting') }}</h4>
  </div>
  <div id="transfer-header-receiving">
    <h4 class="modal-title text-center">{{ t(_self, 'transfer_modal.title.receiving') }}</h4>
  </div>
  <div id="transfer-header-failure">
    <h4 class="modal-title text-center">{{ t(_self, 'transfer_modal.title.failure') }}</h4>
  </div>
  <div id="transfer-header-success">
    <h4 class="modal-title text-center">{{ t(_self, 'transfer_modal.title.success') }}</h4>
  </div>
  <div id="transfer-body-waiting">
    <div class="transfer-modal-waiting">
      <div class="transfer-modal-loading loading">
      </div>
    </div>
  </div>
  <div id="transfer-body-failure">
    <div class="transfer-modal-failure">
      <div class="transfer-modal-loading">
      </div>
    </div>
  </div>
  <div id="transfer-body-success">
    <div class="transfer-modal-success">
      <div class="transfer-modal-loading">
      </div>
    </div>
  </div>
</div>

<script>
  $(document).ready(function () {
    Application.Ui.Popup.Agreements();

    var funcHandleTransaction = function (transaction, onRedirect, onSuccess, onError, afterRedirect) {
      if (transaction.status === "POOL" || (afterRedirect && transaction.status === "REDIRECT_POOL")) {
        setTimeout(function () {
          var url = "{{ path('token_payment_pool', {token: token}) }}";
          Application.Json.Request(url, 'GET', {id: transaction.ID}, function (transaction_pooled) {
            funcHandleTransaction(transaction_pooled, onRedirect, onSuccess, onError, afterRedirect);
          }, function () {
            onError();
          });
        }, 1000);
      } else if (transaction.status === "REDIRECT_POOL") {
        if (onRedirect) {
          onRedirect(transaction);
        }
      } else if (transaction.status === "SUCCESSFUL") {
        onSuccess(transaction);
      } else if (transaction.status === "FAILED") {
        onError(transaction);
      }
    }

    var payByBlik = function () {
      var unlockControls = function () {
        $("#pay-button").prop("disabled", false);
        $("#code-input").val('').prop("disabled", false);
      };

      $("#pay-button").prop("disabled", true);
      $("#code-input").prop("disabled", true);

      var modal = Application.Ui.Popup.Container();

      var onSubmit = function (transaction) {
        var onSuccess = function () {
          modal.find('.modal-header').html($('#code-header-success').html());
          modal.find('.modal-body').html($('#code-body-success').html());
          modal.find('.modal-popup-btn-ok').click(function () {
            Application.Url.Go('{{ path('token', {token: token}) }}')
          }).slideDown();
          unlockControls();
        }
        var onError = function () {
          modal.find('.modal-header').html($('#code-header-failure').html());
          modal.find('.modal-body').html($('#code-body-failure').html());
          modal.find('.modal-popup-btn-cancel').slideDown();
          unlockControls();
        };

        modal.find('.modal-header').html($('#code-header-confirm').html());
        modal.find('.modal-body').html($('#code-body-waiting').html());

        funcHandleTransaction(transaction, null, onSuccess, onError);
      }

      var onSubmissionError = function (errors) {
        var message = [];
        _.each(errors, function (error) {
          message.push(error.message);
        });
        modal.find('.modal-header').html($('#code-header-errors').html());
        modal.find('.modal-body').html('<ul><li>' + _.join(message, '<li>') + '</ul>');
        modal.find('.modal-popup-btn-cancel').slideDown();
        unlockControls();
      }

      modal.on('shown.bs.modal', function () {
        var codeData = {
          code: $("#code-input").val(),
          payment_type: "BLIK",
          agreement_payment: $('#agreement_payment').is(':checked'),
          agreement_data_processing: $('#agreement_data_processing').is(':checked')
        };
        Application.Json.Request("{{ path('token_payment_pay', {token: token}) }}", 'POST', codeData, onSubmit, onSubmissionError);
      });

      modal.find('.modal-header').html($('#code-header-sending').html());
      modal.find('.modal-body').html($('#code-body-waiting').html());
      modal.find('.modal-popup-btn-cancel').addClass('undisplayed');
      modal.find('.modal-popup-btn-ok').addClass('undisplayed btn btn-success');
      modal.modal({show: true, backdrop: 'static', keyboard: false});
    }

    var funcTransferHandleTransaction = function (modal, transaction, afterRedirect) {
      var onRedirect = function (transaction) {
        modal.find('.modal-header').html($('#transfer-header-redirecting').html());
        modal.find('.modal-body').html($('#transfer-body-waiting').html());
        setTimeout(function () {
          Application.Url.Go(transaction.processorUrl);
        }, 3000);
      }
      var onSuccess = function () {
        modal.find('.modal-header').html($('#transfer-header-success').html());
        modal.find('.modal-body').html($('#transfer-body-success').html());
        modal.find('.modal-popup-btn-ok').click(function () {
          Application.Url.Go('{{ path('token', {token: token}) }}')
        }).slideDown();
      }
      var onError = function () {
        $('#pay-button').prop("disabled", false);
        modal.find('.modal-header').html($('#transfer-header-failure').html());
        modal.find('.modal-body').html($('#transfer-body-failure').html());
        modal.find('.modal-popup-btn-cancel').slideDown();
      }
      funcHandleTransaction(transaction, onRedirect, onSuccess, onError, afterRedirect);
    }

    var payByTransfer = function () {
      $('#pay-button').prop("disabled", true);

      var modal = Application.Ui.Popup.Container();

      var onSubmit = function (transaction) {
        funcTransferHandleTransaction(modal, transaction, false);
      }

      var onSubmissionError = function (errors) {
        var message = [];
        _.each(errors, function (error) {
          message.push(error.message);
        });
        modal.find('.modal-header').html($('#transfer-header-errors').html());
        modal.find('.modal-body').html('<ul><li>' + _.join(message, '<li>') + '</ul>');
        modal.find('.modal-popup-btn-cancel').slideDown();
        $('#pay-button').prop("disabled", false);
      }

      modal.on('shown.bs.modal', function () {
        var transferData = {
          channel: $('#pay-button').attr('data-payment-channel-id'),
          payment_type: "TRANSFER",
          agreement_payment: $('#agreement_payment').is(':checked'),
          agreement_data_processing: $('#agreement_data_processing').is(':checked')
        };
        Application.Json.Request("{{ path('token_payment_pay', {token: token}) }}", 'POST', transferData, onSubmit, onSubmissionError);
      })
      modal.find('.modal-header').html($('#transfer-header-sending').html());
      modal.find('.modal-body').html($('#transfer-body-waiting').html());
      modal.find('.modal-popup-btn-cancel').addClass('undisplayed');
      modal.find('.modal-popup-btn-ok').addClass('undisplayed btn btn-success');
      modal.modal({show: true, backdrop: 'static', keyboard: false});
    }

    var funcTransferPool = function (currentUrl) {
      var modal = Application.Ui.Popup.Container();
      modal.on('shown.bs.modal', function () {
        var transaction = {status: currentUrl.params.result, ID: currentUrl.params.id};
        funcTransferHandleTransaction(modal, transaction, true)
      })
      modal.find('.modal-header').html($('#transfer-header-receiving').html());
      modal.find('.modal-body').html($('#transfer-body-waiting').html());
      modal.find('.modal-popup-btn-cancel').addClass('undisplayed');
      modal.find('.modal-popup-btn-ok').addClass('undisplayed btn btn-success');
      modal.modal({show: true, backdrop: 'static', keyboard: false});
    }

    $('#accordion').on('show.bs.collapse', function (e) {
      var currentMethod = $(e.target).attr('data-payment-method');
      var button = $('#pay-button');
      button.unbind()
      button.attr('data-payment-method', currentMethod)
      if (currentMethod === 'BLIK') {
        button.click(payByBlik);
      } else if (currentMethod === 'TRANSFER') {
        button.click(payByTransfer);
      }
    });

    $('.transfer-channel-tile').click(function () {
      $('.transfer-channels').find('img').removeClass('transfer-channel-is-selected').addClass('transfer-channel-not-selected');
      $(this).find('img').removeClass('transfer-channel-not-selected').addClass('transfer-channel-is-selected');
      $('#pay-button').attr('data-payment-channel-id', $(this).attr('data-transfer-channel-id'))
    });

    var currentUrl = Application.Url.Current();
    if (currentUrl.params.result) {
      funcTransferPool(currentUrl)
    }
  })
</script>
